//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Bright.Serialization;

namespace proto.HOKProtocol
{

    public  sealed class SkillKey :  Bright.Serialization.BeanBase 
    {
        public SkillKey()
        {
        }

        public SkillKey(Bright.Common.NotNullInitialization _) 
        {
        }

        public static void SerializeSkillKey(ByteBuf _buf, SkillKey x)
        {
            x.Serialize(_buf);
        }

        public static SkillKey DeserializeSkillKey(ByteBuf _buf)
        {
            var x = new HOKProtocol.SkillKey();
            x.Deserialize(_buf);
            return x;
        }

         public int skillId;

         public long x_val;

         public long z_val;


        public const int __ID__ = 0;
        public override int GetTypeId() => __ID__;

        public override void Serialize(ByteBuf _buf)
        {
            _buf.WriteInt(skillId);
            _buf.WriteLong(x_val);
            _buf.WriteLong(z_val);
        }

        public override void Deserialize(ByteBuf _buf)
        {
            skillId = _buf.ReadInt();
            x_val = _buf.ReadLong();
            z_val = _buf.ReadLong();
        }

        public override string ToString()
        {
            return "HOKProtocol.SkillKey{ "
            + "skillId:" + skillId + ","
            + "x_val:" + x_val + ","
            + "z_val:" + z_val + ","
            + "}";
        }
    }

}
