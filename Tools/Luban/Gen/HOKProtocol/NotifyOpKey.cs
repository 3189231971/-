//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Bright.Serialization;

namespace proto.HOKProtocol
{

    public  sealed class NotifyOpKey :  Bright.Serialization.BeanBase 
    {
        public NotifyOpKey()
        {
        }

        public NotifyOpKey(Bright.Common.NotNullInitialization _) 
        {
            keyList = new System.Collections.Generic.List<HOKProtocol.OpKey>();
        }

        public static void SerializeNotifyOpKey(ByteBuf _buf, NotifyOpKey x)
        {
            x.Serialize(_buf);
        }

        public static NotifyOpKey DeserializeNotifyOpKey(ByteBuf _buf)
        {
            var x = new HOKProtocol.NotifyOpKey();
            x.Deserialize(_buf);
            return x;
        }

         public int frameId;

         public System.Collections.Generic.List<HOKProtocol.OpKey> keyList;


        public const int __ID__ = 0;
        public override int GetTypeId() => __ID__;

        public override void Serialize(ByteBuf _buf)
        {
            _buf.WriteInt(frameId);
            { _buf.WriteSize(keyList.Count); foreach(var _e in keyList) { HOKProtocol.OpKey.SerializeOpKey(_buf, _e); } }
        }

        public override void Deserialize(ByteBuf _buf)
        {
            frameId = _buf.ReadInt();
            {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);keyList = new System.Collections.Generic.List<HOKProtocol.OpKey>(n);for(var i = 0 ; i < n ; i++) { HOKProtocol.OpKey _e;  _e = HOKProtocol.OpKey.DeserializeOpKey(_buf); keyList.Add(_e);}}
        }

        public override string ToString()
        {
            return "HOKProtocol.NotifyOpKey{ "
            + "frameId:" + frameId + ","
            + "keyList:" + Bright.Common.StringUtil.CollectionToString(keyList) + ","
            + "}";
        }
    }

}
