//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Bright.Serialization;

namespace proto.HOKProtocol
{

    public  sealed class NotifyLoadRes :  Bright.Serialization.BeanBase 
    {
        public NotifyLoadRes()
        {
        }

        public NotifyLoadRes(Bright.Common.NotNullInitialization _) 
        {
            heroList = new System.Collections.Generic.List<HOKProtocol.BattleHeroData>();
        }

        public static void SerializeNotifyLoadRes(ByteBuf _buf, NotifyLoadRes x)
        {
            x.Serialize(_buf);
        }

        public static NotifyLoadRes DeserializeNotifyLoadRes(ByteBuf _buf)
        {
            var x = new HOKProtocol.NotifyLoadRes();
            x.Deserialize(_buf);
            return x;
        }

         public int mapId;

         public System.Collections.Generic.List<HOKProtocol.BattleHeroData> heroList;

         public int posIndex;


        public const int __ID__ = 0;
        public override int GetTypeId() => __ID__;

        public override void Serialize(ByteBuf _buf)
        {
            _buf.WriteInt(mapId);
            { _buf.WriteSize(heroList.Count); foreach(var _e in heroList) { HOKProtocol.BattleHeroData.SerializeBattleHeroData(_buf, _e); } }
            _buf.WriteInt(posIndex);
        }

        public override void Deserialize(ByteBuf _buf)
        {
            mapId = _buf.ReadInt();
            {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);heroList = new System.Collections.Generic.List<HOKProtocol.BattleHeroData>(n);for(var i = 0 ; i < n ; i++) { HOKProtocol.BattleHeroData _e;  _e = HOKProtocol.BattleHeroData.DeserializeBattleHeroData(_buf); heroList.Add(_e);}}
            posIndex = _buf.ReadInt();
        }

        public override string ToString()
        {
            return "HOKProtocol.NotifyLoadRes{ "
            + "mapId:" + mapId + ","
            + "heroList:" + Bright.Common.StringUtil.CollectionToString(heroList) + ","
            + "posIndex:" + posIndex + ","
            + "}";
        }
    }

}
