//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Bright.Serialization;

namespace proto.HOKProtocol
{
    public sealed class GameMsg : Bright.Net.Codecs.Protocol
    {
         public HOKProtocol.CMD cmd;

         public HOKProtocol.ErrorCode? err;

         public bool? isEmpty;

         public HOKProtocol.ReqLogin reqLogin;

         public HOKProtocol.RspLogin rspLogin;

         public HOKProtocol.ReqMatch reqMatch;

         public HOKProtocol.RspMatch rspMatch;

         public HOKProtocol.NotifyConfirm notifyConfirm;

         public HOKProtocol.SendConfirm sendConfirm;

         public HOKProtocol.NotifySelect notifySelect;

         public HOKProtocol.SendSelect sendSelect;

         public HOKProtocol.NotifyLoadRes notifyLoadRes;

         public HOKProtocol.SendLoadPrg sendLoadPrg;

         public HOKProtocol.NotifyLoadPrg notifyLoadPrg;

         public HOKProtocol.ReqBattleStart reqBattleStart;

         public HOKProtocol.RspBattleStart rspBattleStart;

         public HOKProtocol.ReqBattleEnd reqBattleEnd;

         public HOKProtocol.RspBattleEnd rspBattleEnd;

         public HOKProtocol.SendChat sendChat;

         public HOKProtocol.NotifyChat notifyChat;

         public HOKProtocol.SendOpKey sendOpKey;

         public HOKProtocol.NotifyOpKey notifyOpKey;

         public HOKProtocol.ReqPing reqPing;

         public HOKProtocol.RspPing rspPing;

         public HOKProtocol.ReqBagItem reqBagItem;

         public HOKProtocol.RspBagItem rspBagItem;


        public GameMsg()
        {
        }

        public GameMsg(Bright.Common.NotNullInitialization _)
        {
            reqLogin = new HOKProtocol.ReqLogin();
            rspLogin = new HOKProtocol.RspLogin();
            reqMatch = new HOKProtocol.ReqMatch();
            rspMatch = new HOKProtocol.RspMatch();
            notifyConfirm = new HOKProtocol.NotifyConfirm();
            sendConfirm = new HOKProtocol.SendConfirm();
            notifySelect = new HOKProtocol.NotifySelect();
            sendSelect = new HOKProtocol.SendSelect();
            notifyLoadRes = new HOKProtocol.NotifyLoadRes();
            sendLoadPrg = new HOKProtocol.SendLoadPrg();
            notifyLoadPrg = new HOKProtocol.NotifyLoadPrg();
            reqBattleStart = new HOKProtocol.ReqBattleStart();
            rspBattleStart = new HOKProtocol.RspBattleStart();
            reqBattleEnd = new HOKProtocol.ReqBattleEnd();
            rspBattleEnd = new HOKProtocol.RspBattleEnd();
            sendChat = new HOKProtocol.SendChat();
            notifyChat = new HOKProtocol.NotifyChat();
            sendOpKey = new HOKProtocol.SendOpKey();
            notifyOpKey = new HOKProtocol.NotifyOpKey();
            reqPing = new HOKProtocol.ReqPing();
            rspPing = new HOKProtocol.RspPing();
            reqBagItem = new HOKProtocol.ReqBagItem();
            rspBagItem = new HOKProtocol.RspBagItem();
        }
        public const int __ID__ = 20437;

        public override int GetTypeId()
        {
            return __ID__;
        }

        public override void Serialize(ByteBuf _buf)
        {
            _buf.WriteInt((int)cmd);
            { if(err is HOKProtocol.ErrorCode __value__){ _buf.WriteBool(true); _buf.WriteInt((int)__value__); } else { _buf.WriteBool(false); } }
            { if(isEmpty is bool __value__){ _buf.WriteBool(true); _buf.WriteBool(__value__); } else { _buf.WriteBool(false); } }
            { if(reqLogin is HOKProtocol.ReqLogin __value__){ _buf.WriteBool(true); HOKProtocol.ReqLogin.SerializeReqLogin(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(rspLogin is HOKProtocol.RspLogin __value__){ _buf.WriteBool(true); HOKProtocol.RspLogin.SerializeRspLogin(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(reqMatch is HOKProtocol.ReqMatch __value__){ _buf.WriteBool(true); HOKProtocol.ReqMatch.SerializeReqMatch(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(rspMatch is HOKProtocol.RspMatch __value__){ _buf.WriteBool(true); HOKProtocol.RspMatch.SerializeRspMatch(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(notifyConfirm is HOKProtocol.NotifyConfirm __value__){ _buf.WriteBool(true); HOKProtocol.NotifyConfirm.SerializeNotifyConfirm(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(sendConfirm is HOKProtocol.SendConfirm __value__){ _buf.WriteBool(true); HOKProtocol.SendConfirm.SerializeSendConfirm(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(notifySelect is HOKProtocol.NotifySelect __value__){ _buf.WriteBool(true); HOKProtocol.NotifySelect.SerializeNotifySelect(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(sendSelect is HOKProtocol.SendSelect __value__){ _buf.WriteBool(true); HOKProtocol.SendSelect.SerializeSendSelect(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(notifyLoadRes is HOKProtocol.NotifyLoadRes __value__){ _buf.WriteBool(true); HOKProtocol.NotifyLoadRes.SerializeNotifyLoadRes(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(sendLoadPrg is HOKProtocol.SendLoadPrg __value__){ _buf.WriteBool(true); HOKProtocol.SendLoadPrg.SerializeSendLoadPrg(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(notifyLoadPrg is HOKProtocol.NotifyLoadPrg __value__){ _buf.WriteBool(true); HOKProtocol.NotifyLoadPrg.SerializeNotifyLoadPrg(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(reqBattleStart is HOKProtocol.ReqBattleStart __value__){ _buf.WriteBool(true); HOKProtocol.ReqBattleStart.SerializeReqBattleStart(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(rspBattleStart is HOKProtocol.RspBattleStart __value__){ _buf.WriteBool(true); HOKProtocol.RspBattleStart.SerializeRspBattleStart(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(reqBattleEnd is HOKProtocol.ReqBattleEnd __value__){ _buf.WriteBool(true); HOKProtocol.ReqBattleEnd.SerializeReqBattleEnd(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(rspBattleEnd is HOKProtocol.RspBattleEnd __value__){ _buf.WriteBool(true); HOKProtocol.RspBattleEnd.SerializeRspBattleEnd(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(sendChat is HOKProtocol.SendChat __value__){ _buf.WriteBool(true); HOKProtocol.SendChat.SerializeSendChat(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(notifyChat is HOKProtocol.NotifyChat __value__){ _buf.WriteBool(true); HOKProtocol.NotifyChat.SerializeNotifyChat(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(sendOpKey is HOKProtocol.SendOpKey __value__){ _buf.WriteBool(true); HOKProtocol.SendOpKey.SerializeSendOpKey(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(notifyOpKey is HOKProtocol.NotifyOpKey __value__){ _buf.WriteBool(true); HOKProtocol.NotifyOpKey.SerializeNotifyOpKey(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(reqPing is HOKProtocol.ReqPing __value__){ _buf.WriteBool(true); HOKProtocol.ReqPing.SerializeReqPing(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(rspPing is HOKProtocol.RspPing __value__){ _buf.WriteBool(true); HOKProtocol.RspPing.SerializeRspPing(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(reqBagItem is HOKProtocol.ReqBagItem __value__){ _buf.WriteBool(true); HOKProtocol.ReqBagItem.SerializeReqBagItem(_buf, __value__); } else { _buf.WriteBool(false); } }
            { if(rspBagItem is HOKProtocol.RspBagItem __value__){ _buf.WriteBool(true); HOKProtocol.RspBagItem.SerializeRspBagItem(_buf, __value__); } else { _buf.WriteBool(false); } }
        }

        public override void Deserialize(ByteBuf _buf)
        {
            cmd = (HOKProtocol.CMD)_buf.ReadInt();
            if(_buf.ReadBool()){ err = (HOKProtocol.ErrorCode)_buf.ReadInt(); } else { err = null; }
            if(_buf.ReadBool()){ isEmpty = _buf.ReadBool(); } else { isEmpty = null; }
            if(_buf.ReadBool()){ reqLogin = HOKProtocol.ReqLogin.DeserializeReqLogin(_buf); } else { reqLogin = null; }
            if(_buf.ReadBool()){ rspLogin = HOKProtocol.RspLogin.DeserializeRspLogin(_buf); } else { rspLogin = null; }
            if(_buf.ReadBool()){ reqMatch = HOKProtocol.ReqMatch.DeserializeReqMatch(_buf); } else { reqMatch = null; }
            if(_buf.ReadBool()){ rspMatch = HOKProtocol.RspMatch.DeserializeRspMatch(_buf); } else { rspMatch = null; }
            if(_buf.ReadBool()){ notifyConfirm = HOKProtocol.NotifyConfirm.DeserializeNotifyConfirm(_buf); } else { notifyConfirm = null; }
            if(_buf.ReadBool()){ sendConfirm = HOKProtocol.SendConfirm.DeserializeSendConfirm(_buf); } else { sendConfirm = null; }
            if(_buf.ReadBool()){ notifySelect = HOKProtocol.NotifySelect.DeserializeNotifySelect(_buf); } else { notifySelect = null; }
            if(_buf.ReadBool()){ sendSelect = HOKProtocol.SendSelect.DeserializeSendSelect(_buf); } else { sendSelect = null; }
            if(_buf.ReadBool()){ notifyLoadRes = HOKProtocol.NotifyLoadRes.DeserializeNotifyLoadRes(_buf); } else { notifyLoadRes = null; }
            if(_buf.ReadBool()){ sendLoadPrg = HOKProtocol.SendLoadPrg.DeserializeSendLoadPrg(_buf); } else { sendLoadPrg = null; }
            if(_buf.ReadBool()){ notifyLoadPrg = HOKProtocol.NotifyLoadPrg.DeserializeNotifyLoadPrg(_buf); } else { notifyLoadPrg = null; }
            if(_buf.ReadBool()){ reqBattleStart = HOKProtocol.ReqBattleStart.DeserializeReqBattleStart(_buf); } else { reqBattleStart = null; }
            if(_buf.ReadBool()){ rspBattleStart = HOKProtocol.RspBattleStart.DeserializeRspBattleStart(_buf); } else { rspBattleStart = null; }
            if(_buf.ReadBool()){ reqBattleEnd = HOKProtocol.ReqBattleEnd.DeserializeReqBattleEnd(_buf); } else { reqBattleEnd = null; }
            if(_buf.ReadBool()){ rspBattleEnd = HOKProtocol.RspBattleEnd.DeserializeRspBattleEnd(_buf); } else { rspBattleEnd = null; }
            if(_buf.ReadBool()){ sendChat = HOKProtocol.SendChat.DeserializeSendChat(_buf); } else { sendChat = null; }
            if(_buf.ReadBool()){ notifyChat = HOKProtocol.NotifyChat.DeserializeNotifyChat(_buf); } else { notifyChat = null; }
            if(_buf.ReadBool()){ sendOpKey = HOKProtocol.SendOpKey.DeserializeSendOpKey(_buf); } else { sendOpKey = null; }
            if(_buf.ReadBool()){ notifyOpKey = HOKProtocol.NotifyOpKey.DeserializeNotifyOpKey(_buf); } else { notifyOpKey = null; }
            if(_buf.ReadBool()){ reqPing = HOKProtocol.ReqPing.DeserializeReqPing(_buf); } else { reqPing = null; }
            if(_buf.ReadBool()){ rspPing = HOKProtocol.RspPing.DeserializeRspPing(_buf); } else { rspPing = null; }
            if(_buf.ReadBool()){ reqBagItem = HOKProtocol.ReqBagItem.DeserializeReqBagItem(_buf); } else { reqBagItem = null; }
            if(_buf.ReadBool()){ rspBagItem = HOKProtocol.RspBagItem.DeserializeRspBagItem(_buf); } else { rspBagItem = null; }
        }

        public override void Reset()
        {
            throw new System.NotImplementedException();
        }

        public override object Clone()
        {
            throw new System.NotImplementedException();
        }

        public override string ToString()
        {
            return "HOKProtocol.GameMsg{ "
            + "cmd:" + cmd + ","
            + "err:" + err + ","
            + "isEmpty:" + isEmpty + ","
            + "reqLogin:" + reqLogin + ","
            + "rspLogin:" + rspLogin + ","
            + "reqMatch:" + reqMatch + ","
            + "rspMatch:" + rspMatch + ","
            + "notifyConfirm:" + notifyConfirm + ","
            + "sendConfirm:" + sendConfirm + ","
            + "notifySelect:" + notifySelect + ","
            + "sendSelect:" + sendSelect + ","
            + "notifyLoadRes:" + notifyLoadRes + ","
            + "sendLoadPrg:" + sendLoadPrg + ","
            + "notifyLoadPrg:" + notifyLoadPrg + ","
            + "reqBattleStart:" + reqBattleStart + ","
            + "rspBattleStart:" + rspBattleStart + ","
            + "reqBattleEnd:" + reqBattleEnd + ","
            + "rspBattleEnd:" + rspBattleEnd + ","
            + "sendChat:" + sendChat + ","
            + "notifyChat:" + notifyChat + ","
            + "sendOpKey:" + sendOpKey + ","
            + "notifyOpKey:" + notifyOpKey + ","
            + "reqPing:" + reqPing + ","
            + "rspPing:" + rspPing + ","
            + "reqBagItem:" + reqBagItem + ","
            + "rspBagItem:" + rspBagItem + ","
            + "}";
        }
    }

}
