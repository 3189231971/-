//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Bright.Serialization;

namespace proto.HOKProtocol
{

    public  sealed class PlayerData :  Bright.Serialization.BeanBase 
    {
        public PlayerData()
        {
        }

        public PlayerData(Bright.Common.NotNullInitialization _) 
        {
            name = "";
            heroSelectData = new System.Collections.Generic.List<HOKProtocol.HeroSelectData>();
        }

        public static void SerializePlayerData(ByteBuf _buf, PlayerData x)
        {
            x.Serialize(_buf);
        }

        public static PlayerData DeserializePlayerData(ByteBuf _buf)
        {
            var x = new HOKProtocol.PlayerData();
            x.Deserialize(_buf);
            return x;
        }

         public int id;

         public string name;

         public int level;

         public int exp;

         public int coin;

         public int diamond;

         public int ticket;

         public System.Collections.Generic.List<HOKProtocol.HeroSelectData> heroSelectData;


        public const int __ID__ = 0;
        public override int GetTypeId() => __ID__;

        public override void Serialize(ByteBuf _buf)
        {
            _buf.WriteInt(id);
            _buf.WriteString(name);
            _buf.WriteInt(level);
            _buf.WriteInt(exp);
            _buf.WriteInt(coin);
            _buf.WriteInt(diamond);
            _buf.WriteInt(ticket);
            { _buf.WriteSize(heroSelectData.Count); foreach(var _e in heroSelectData) { HOKProtocol.HeroSelectData.SerializeHeroSelectData(_buf, _e); } }
        }

        public override void Deserialize(ByteBuf _buf)
        {
            id = _buf.ReadInt();
            name = _buf.ReadString();
            level = _buf.ReadInt();
            exp = _buf.ReadInt();
            coin = _buf.ReadInt();
            diamond = _buf.ReadInt();
            ticket = _buf.ReadInt();
            {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);heroSelectData = new System.Collections.Generic.List<HOKProtocol.HeroSelectData>(n);for(var i = 0 ; i < n ; i++) { HOKProtocol.HeroSelectData _e;  _e = HOKProtocol.HeroSelectData.DeserializeHeroSelectData(_buf); heroSelectData.Add(_e);}}
        }

        public override string ToString()
        {
            return "HOKProtocol.PlayerData{ "
            + "id:" + id + ","
            + "name:" + name + ","
            + "level:" + level + ","
            + "exp:" + exp + ","
            + "coin:" + coin + ","
            + "diamond:" + diamond + ","
            + "ticket:" + ticket + ","
            + "heroSelectData:" + Bright.Common.StringUtil.CollectionToString(heroSelectData) + ","
            + "}";
        }
    }

}
