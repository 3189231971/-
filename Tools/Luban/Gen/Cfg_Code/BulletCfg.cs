//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace cfg
{

public sealed partial class BulletCfg :  Bright.Config.BeanBase 
{
    public BulletCfg(ByteBuf _buf) 
    {
        bulletType = (BulletTypeEnum)_buf.ReadInt();
        bulletName = _buf.ReadString();
        resPath = _buf.ReadString();
        bulletSpeed = _buf.ReadFloat();
        bulletSize = _buf.ReadFloat();
        bulletHeight = _buf.ReadFloat();
        bulletOffset = _buf.ReadFloat();
        bulletDelay = _buf.ReadInt();
        canBlock = _buf.ReadBool();
        if(_buf.ReadBool()){ impacter = TargetCfg.DeserializeTargetCfg(_buf); } else { impacter = null; }
        bulletDuration = _buf.ReadInt();
        PostInit();
    }

    public static BulletCfg DeserializeBulletCfg(ByteBuf _buf)
    {
        return new BulletCfg(_buf);
    }

    public BulletTypeEnum bulletType { get; private set; }
    public string bulletName { get; private set; }
    public string resPath { get; private set; }
    public float bulletSpeed { get; private set; }
    public float bulletSize { get; private set; }
    public float bulletHeight { get; private set; }
    /// <summary>
    /// 发射子弹的时候，要往发射方向偏移一小段而不是从中心
    /// </summary>
    public float bulletOffset { get; private set; }
    public int bulletDelay { get; private set; }
    public bool canBlock { get; private set; }
    public TargetCfg impacter { get; private set; }
    public int bulletDuration { get; private set; }

    public const int __ID__ = -1027634206;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        impacter?.Resolve(_tables);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        impacter?.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "bulletType:" + bulletType + ","
        + "bulletName:" + bulletName + ","
        + "resPath:" + resPath + ","
        + "bulletSpeed:" + bulletSpeed + ","
        + "bulletSize:" + bulletSize + ","
        + "bulletHeight:" + bulletHeight + ","
        + "bulletOffset:" + bulletOffset + ","
        + "bulletDelay:" + bulletDelay + ","
        + "canBlock:" + canBlock + ","
        + "impacter:" + impacter + ","
        + "bulletDuration:" + bulletDuration + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
