//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace editor.cfg
{

/// <summary>
/// 碰撞关系配置
/// </summary>
public sealed partial class TargetCfg :  Bright.Config.EditorBeanBase 
{
    public TargetCfg()
    {
            targetTeam = "Dynamic";
            selectRule = "None";
            targetTypeArr = System.Array.Empty<string>();
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["targetTeam"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  targetTeam = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["selectRule"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  selectRule = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["targetTypeArr"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } int _n = _fieldJson.Count; targetTypeArr = new string[_n]; int _index=0; foreach(SimpleJSON.JSONNode __e in _fieldJson.Children) { string __v;  if(!__e.IsString) { throw new SerializationException(); }  __v = __e;  targetTypeArr[_index++] = __v; }  
            }
        }
        
        { 
            var _fieldJson = _json["selectRange"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  selectRange = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["searchDis"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  searchDis = _fieldJson;
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {        
        {
            _json["targetTeam"] = new JSONString(targetTeam);
        }
        {
            _json["selectRule"] = new JSONString(selectRule);
        }
        {

            if (targetTypeArr == null) { throw new System.ArgumentNullException(); }
            { var __cjson = new JSONArray(); foreach(var _e in targetTypeArr) { __cjson["null"] = new JSONString(_e); } _json["targetTypeArr"] = __cjson; }
        }
        {
            _json["selectRange"] = new JSONNumber(selectRange);
        }
        {
            _json["searchDis"] = new JSONNumber(searchDis);
        }
    }

    public static TargetCfg LoadJsonTargetCfg(SimpleJSON.JSONNode _json)
    {
        TargetCfg obj = new TargetCfg();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonTargetCfg(TargetCfg _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    public string targetTeam { get; set; }

    public string selectRule { get; set; }

    /// <summary>
    /// 可以是多类目标：英雄、小兵、塔
    /// </summary>
    public string[] targetTypeArr { get; set; }

    /// <summary>
    /// 查找目标范围距离
    /// </summary>
    public float selectRange { get; set; }

    /// <summary>
    /// 移动攻击搜索距离 m
    /// </summary>
    public float searchDis { get; set; }

}
}
