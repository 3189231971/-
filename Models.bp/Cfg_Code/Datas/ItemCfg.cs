//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace cfg.Datas
{

public sealed partial class ItemCfg :  Bright.Config.BeanBase 
{
    public ItemCfg(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        name = _buf.ReadString();
        imgPath = _buf.ReadString();
        des = _buf.ReadString();
        {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);effectList = new System.Collections.Generic.List<int>(n);for(var i = 0 ; i < n ; i++) { int _e;  _e = _buf.ReadInt(); effectList.Add(_e);}}
        PostInit();
    }

    public static ItemCfg DeserializeItemCfg(ByteBuf _buf)
    {
        return new Datas.ItemCfg(_buf);
    }

    public int id { get; private set; }
    public string name { get; private set; }
    public string imgPath { get; private set; }
    public string des { get; private set; }
    public System.Collections.Generic.List<int> effectList { get; private set; }
    public System.Collections.Generic.List<Datas.ItemEffectCfg> effectList_Ref { get; private set; }

    public const int __ID__ = 1931547948;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        { Datas.TbItemEffectCfg __table = (Datas.TbItemEffectCfg)_tables["Datas.TbItemEffectCfg"]; this.effectList_Ref = new System.Collections.Generic.List<Datas.ItemEffectCfg>(); foreach(var __e in effectList) { this.effectList_Ref.Add(__table.GetOrDefault(__e)); } }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "name:" + name + ","
        + "imgPath:" + imgPath + ","
        + "des:" + des + ","
        + "effectList:" + Bright.Common.StringUtil.CollectionToString(effectList) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
