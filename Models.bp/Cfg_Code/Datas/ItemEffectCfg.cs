//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace cfg.Datas
{

public sealed partial class ItemEffectCfg :  Bright.Config.BeanBase 
{
    public ItemEffectCfg(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        effectType = (Enums.ItemEffectType)_buf.ReadInt();
        effectVal = _buf.ReadInt();
        effectVal2 = _buf.ReadString();
        PostInit();
    }

    public static ItemEffectCfg DeserializeItemEffectCfg(ByteBuf _buf)
    {
        return new Datas.ItemEffectCfg(_buf);
    }

    public int id { get; private set; }
    public Enums.ItemEffectType effectType { get; private set; }
    public int effectVal { get; private set; }
    /// <summary>
    /// 如果int型不够用，就用这个field
    /// </summary>
    public string effectVal2 { get; private set; }

    public const int __ID__ = 1987344347;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "effectType:" + effectType + ","
        + "effectVal:" + effectVal + ","
        + "effectVal2:" + effectVal2 + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
